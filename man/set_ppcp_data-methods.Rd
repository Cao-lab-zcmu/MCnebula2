% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extraMethods-draw_nodes.R
\name{set_ppcp_data-methods}
\alias{set_ppcp_data-methods}
\alias{set_ppcp_data}
\alias{set_ppcp_data,missing,missing-method}
\alias{set_ppcp_data,mcnebula,ANY-method}
\alias{set_ppcp_data,mcnebula,character-method}
\title{Custom specify PPCP data for visualization in nodes}
\usage{
\S4method{set_ppcp_data}{missing,missing}()

\S4method{set_ppcp_data}{mcnebula,ANY}(x, classes)

\S4method{set_ppcp_data}{mcnebula,character}(x, classes)
}
\arguments{
\item{x}{\linkS4class{mcnebula} object.}

\item{classes}{character. The names of chemical classes.
Use \code{classification(object)} to get optional candidates.}
}
\description{
Run before \code{\link[=annotate_nebula]{annotate_nebula()}} or \code{\link[=draw_nodes]{draw_nodes()}}.
Custom specify PPCP data for visualization in nodes.
All chemical classes exists in PPCP data could be specified.

\code{set_ppcp_data()}: get the function for generating
default parameters for the method
\code{set_ppcp_data}.

\code{set_ppcp_data(x, ...)}:
use the default parameters whatever 'missing'
while performing the method \code{set_ppcp_data}.
}
\examples{
\dontrun{
  test <- mcn_5features
  
  ## the previous steps
  test1 <- filter_structure(test)
  test1 <- create_reference(test1)
  test1 <- filter_formula(test1, by_reference = T)
  test1 <- create_stardust_classes(test1)
  test1 <- create_features_annotation(test1)
  test1 <- cross_filter_stardust(test1, 2, 1)
  test1 <- create_nebula_index(test1)
  test1 <- compute_spectral_similarity(test1)
  test1 <- create_child_nebulae(test1, 0.01, 5)
  test1 <- create_child_layouts(test1)
  test1 <- activate_nebulae(test1)
  
  ## optional 'nebula_name'
  visualize(test1)
  ## a class for example
  class <- visualize(test1)$class.name[1]
  tmp <- export_path(test1)
  ## customize the chemical classes displayed
  ## in the radial bar plot in node.
  classes <- classification(test1)
  ## get some random classes
  set.seed(10)
  classes <- sample(classes$class.name, 50)
  classes
  test1 <- set_ppcp_data(test1, classes)
  test1 <- draw_nodes(test1, class,
    add_structure = F,
    add_ration = F
  )
  
  ## visualize with ID of 'feature' (.features_id)
  ## with legend
  ids <- names(nodes_grob(child_nebulae(test1)))
  x11(width = 15, height = 5)
  show_node(test1, ids[1])
  
  ## get a function to generate default parameters
  set_ppcp_data()
  ## the default parameters
  set_ppcp_data()(test1)
  
  unlink(tmp, T, T)
}
}
\seealso{
\code{\link[=annotate_nebula]{annotate_nebula()}}, \code{\link[=draw_nodes]{draw_nodes()}}.
}
