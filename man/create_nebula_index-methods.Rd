% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-create_nebula_index.R
\name{create_nebula_index-methods}
\alias{create_nebula_index-methods}
\alias{create_nebula_index}
\alias{create_nebula_index,missing,missing-method}
\alias{create_nebula_index,mcnebula,ANY-method}
\alias{create_nebula_index,mcnebula,logical-method}
\title{Set down the chemical classes for visualization}
\usage{
\S4method{create_nebula_index}{missing,missing}()

\S4method{create_nebula_index}{mcnebula,ANY}(x, force)

\S4method{create_nebula_index}{mcnebula,logical}(x, force)
}
\arguments{
\item{x}{\linkS4class{mcnebula} object.}

\item{force}{logical. The number of chemical classes in 'stardust_classes' data
would be checked. The maximum is 120. If there were too many classes, return
with error. Set to \code{FALSE}, escape from maximum check.}
}
\description{
Arrange the filtered 'stardust_classes' data as 'nebula_index' data.
The chemical classes in 'nebula_index' data would be visualized as Child-Nebulae.
Run after \code{\link[=cross_filter_stardust]{cross_filter_stardust()}}.

\code{create_nebula_index()}: get the default parameters for the method
\code{create_nebula_index}.

\code{create_nebula_index(x, ...)}: use the default parameters whatever 'missing'
while performing the method \code{create_nebula_index}.
}
\examples{
\dontrun{
  test <- mcn_5features
  
  ## the previous steps
  test1 <- filter_structure(test)
  test1 <- create_reference(test1)
  test1 <- filter_formula(test1, by_reference = T)
  test1 <- create_stardust_classes(test1)
  test1 <- create_features_annotation(test1)
  test1 <- cross_filter_stardust(test1, 2, 1)
  
  test1 <- create_nebula_index(test1)
  ## see results
  nebula_index(test1)
  ## or
  reference(test1)$nebula_index
  ## or
  reference(mcn_dataset(test1))$nebula_index
}
}
