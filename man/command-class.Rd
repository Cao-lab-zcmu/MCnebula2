% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-command.R
\docType{class}
\name{command-class}
\alias{command-class}
\alias{.command}
\alias{command}
\alias{show,command-method}
\alias{show}
\alias{command_name,command-method}
\alias{command_name}
\alias{command_name<-,command-method}
\alias{command_name<-}
\alias{command_function,command-method}
\alias{command_function}
\alias{command_function<-,command-method}
\alias{command_function<-}
\alias{command_args,command-method}
\alias{command_args}
\alias{command_args<-,command-method}
\alias{command_args<-}
\alias{new_command,function,character-method}
\alias{new_command}
\alias{new_command,function,missing-method}
\alias{call_command,command-method}
\alias{call_command}
\title{Preparation of an instruction to be executed}
\usage{
\S4method{show}{command}(object)

\S4method{command_name}{command}(x)

\S4method{command_name}{command}(x) <- value

\S4method{command_function}{command}(x)

\S4method{command_function}{command}(x) <- value

\S4method{command_args}{command}(x)

\S4method{command_args}{command}(x) <- value

\S4method{new_command}{`function`,character}(fun, ..., name)

\S4method{new_command}{`function`,missing}(fun, ..., name)

\S4method{call_command}{command}(x)
}
\arguments{
\item{value}{The value for the slot.}

\item{fun}{function.}

\item{...}{parameters (with names or without names) passed to the function.}

\item{name}{character(1). Name to slot \code{command_name}.}
}
\description{
Packing the funciton and the args inside this class object,
so that it can be performed easily at any time.

\code{command_name}, \code{command_name<-}: getter and setter
for the \code{command_name} slot of the object.

\code{command_function}, \code{command_function<-}: getter and setter
for the \code{command_function} slot of the object.

\code{command_args}, \code{command_args<-}: getter and setter
for the \code{command_args} slot of the object.

\code{new_command}: create an object of \linkS4class{command}.

\code{call_command}: Execute the function (slot \code{command_function})
with the parameters (slot \code{command_args}).
}
\section{Slots}{

\describe{
\item{\code{command_name}}{character(1). Describe the command name.}

\item{\code{command_function}}{function.}

\item{\code{command_args}}{the parameters passed to the function.}
}}

\examples{
\dontrun{
  ## example 1
  com <- new_command(plot, x = 1:10)
  com
  call_command(com)
  
  ## example 2
  com <- new_command(data.frame, x = 1:10, y = 1:10, z = 1:10)
  call_command(com)
  
  ## example 3
  data <- data.frame(x = 1:10, y = 1:10)
  com1 <- new_command(ggplot, data)
  com2 <- new_command(geom_point, aes(x = x, y = y))
  call_command(com1) + call_command(com2)
  
  ## slots
  command_name(com)
  command_args(com)
  command_function(com)
}
}
\seealso{
Other call_commands: 
\code{\link{code_block-class}},
\code{\link{ggset-class}},
\code{\link{report-class}},
\code{\link{section-class}}

Other call_commands: 
\code{\link{code_block-class}},
\code{\link{ggset-class}},
\code{\link{report-class}},
\code{\link{section-class}}
}
\concept{call_commands}
