% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-create_stardust_classes.R
\name{create_stardust_classes-methods}
\alias{create_stardust_classes-methods}
\alias{create_stardust_classes}
\alias{create_stardust_classes,missing,missing,missing,missing,missing-method}
\alias{create_stardust_classes,mcnebula,ANY,ANY,ANY,ANY-method}
\alias{create_stardust_classes,mcnebula,numeric,numeric,logical,logical-method}
\title{'Inner' filter for PPCP data}
\usage{
\S4method{create_stardust_classes}{missing,missing,missing,missing,missing}()

\S4method{create_stardust_classes}{mcnebula,ANY,ANY,ANY,ANY}(
  x,
  pp.threshold,
  hierarchy_priority,
  position_isomerism,
  inherit_dataset
)

\S4method{create_stardust_classes}{mcnebula,numeric,numeric,logical,logical}(
  x,
  pp.threshold,
  hierarchy_priority,
  position_isomerism,
  inherit_dataset
)
}
\arguments{
\item{x}{\linkS4class{mcnebula} object.}

\item{pp.threshold}{numeric(1) Threshold for PPCP. \code{pp.threshold = 0.5} may
work well.}

\item{hierarchy_priority}{numeric. The specified hierarchy of classes to retain.
The other hierarchy would be filtered out. The hierarchy:
\itemize{
\item n: ...
\item 5: Classes of Level 5.
\item 4: Classes of Subclass.
\item 3: Classes of Class.
\item 2: Classes of Super Class.
\item ...
}}

\item{position_isomerism}{logical. If \code{TRUE}, use pattern match
to filter out all classes names contains Arabic numerals.
Generally, these classes describe about the position of chemical functional group,
which were too subtle for machine to predict from LC-MS/MS spectrum.}

\item{inherit_dataset}{logical. If \code{TRUE}, use latest PPCP data
formed by \code{\link[=filter_ppcp]{filter_ppcp()}}. i.e., data of:
\itemize{
\item latest(x, subscript = ".f3_canopus")
}

Else, run \code{\link[=filter_ppcp]{filter_ppcp()}}.}
}
\description{
Perform 'inner' filter for PPCP
(posterior probability of classification prediction) data of each 'feature',
then gathered as 'stardust_classes' data.
Run after \code{\link[=create_reference]{create_reference()}}.
Standby for next step \code{\link[=cross_filter_stardust]{cross_filter_stardust()}}.

\code{create_stardust_classes()}: get the default parameters for the method
\code{create_stardust_classes}.

\code{create_stardust_classes(x, ...)}:
use the default parameters whatever 'missing'
while performing the method \code{create_stardust_classes}.
}
\details{
The PPCP data for each 'feature' contains the prediction of thousands of classes
for the potential compound (even if the chemical structure was unknown).
See \url{http://www.nature.com/articles/s41587-020-0740-8}
for details about the prediction.
The data contains attributes of:
\itemize{
\item \code{class.name}: name of classes.
\item \code{pp.value}: value of posterior probability.
\item \code{hierarchy}: hierarchy of classes in the taxonomy.
See \url{https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0174-y}
for details about hierarchy and taxonomy of chemical classification.
\item ...
}

The method \code{\link[=create_stardust_classes]{create_stardust_classes()}} use these inner attributes to
filter classes candidates for each 'feature'.
}
\examples{
\dontrun{
  test <- mcn_5features
  
  ## the previous steps
  test1 <- filter_structure(test)
  test1 <- create_reference(test1)
  
  test1 <- create_stardust_classes(test1)
  ## see results
  stardust_classes(test1)
  ## or
  reference(test1)$stardust_classes
  ## or
  reference(mcn_dataset(test1))$stardust_classes
  
  ## the default parameters
  create_stardust_classes()
}
}
