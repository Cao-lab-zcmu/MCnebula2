% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-create_parent_nebula.R
\name{create_parent_nebula-methods}
\alias{create_parent_nebula-methods}
\alias{create_parent_nebula}
\alias{create_parent_nebula,missing,missing,missing,missing-method}
\alias{create_parent_nebula,mcnebula,ANY,ANY,ANY-method}
\alias{create_parent_nebula,mcnebula,numeric,numeric,logical-method}
\title{Gather data to create Parent-Nebula}
\usage{
\S4method{create_parent_nebula}{missing,missing,missing,missing}()

\S4method{create_parent_nebula}{mcnebula,ANY,ANY,ANY}(x, edge_cutoff, max_edge_number, remove_isolate)

\S4method{create_parent_nebula}{mcnebula,numeric,numeric,logical}(x, edge_cutoff, max_edge_number, remove_isolate)
}
\arguments{
\item{x}{\linkS4class{mcnebula} object.}

\item{edge_cutoff}{numeric(1). Value in (0,1). Set a threshold to
create edges upon similarity value of 'spectral_similarity' data.}

\item{max_edge_number}{numeric(1).
For nodes (features) in each Parent-Nebulae (i.e. network), the maximum number of
edges link with. If the number exceeds the limitation, only edges representing higher
spectral similarity would be retained.}

\item{remove_isolate}{logical. If \code{TRUE}, remove the isolate 'features'
(in network, i.e. the nodes without edge)}
}
\description{
Gather 'spectral_similarity' data and 'features_annotation' data
to create 'igraph' object use function of \code{\link[igraph:graph_from_data_frame]{igraph::graph_from_data_frame()}}.

\code{create_parent_nebula()}: get the default parameters for the method
\code{create_parent_nebula}.

\code{create_parent_nebula(x, ...)}:
use the default parameters whatever 'missing'
while performing the method \code{create_parent_nebula}.
}
\examples{
\dontrun{
  test <- mcn_5features
  
  ## the previous steps
  test1 <- filter_structure(test)
  test1 <- create_reference(test1)
  test1 <- filter_formula(test1, by_reference = T)
  test1 <- create_stardust_classes(test1)
  test1 <- create_features_annotation(test1)
  test1 <- cross_filter_stardust(test1, 2, 1)
  test1 <- create_nebula_index(test1)
  test1 <- compute_spectral_similarity(test1)
  
  ## default parameters
  create_parent_nebula()
  
  test1 <- create_parent_nebula(test1, 0.01)
  ## see results
  igraph(parent_nebula(test1))
  ## write output for 'Cytoscape' or other network software
  tmp <- tempdir()
  igraph::write_graph(
    igraph(parent_nebula(test1)),
    file = paste0(tmp, "/parent_nebula.graphml",
      format = "graphml"
    )
  )
  
  unlink(tmp, T, T)
}
}
\seealso{
\code{\link[=compute_spectral_similarity]{compute_spectral_similarity()}}, \code{\link[=create_features_annotation]{create_features_annotation()}},
\code{\link[igraph:graph_from_data_frame]{igraph::graph_from_data_frame()}}.
}
